taskId: ${taskcluster.taskId}
provisionerId: ${taskcluster.docker.provisionerId}
workerType: ${taskcluster.docker.workerType}
taskGroupId: ${taskcluster.taskGroupId}
schedulerId: ${taskcluster.schedulerId}
dependencies:
  $map: { $eval: build.dependencies }
  each(b):
    $eval: as_slugid(b)
created: { $fromNow: '0 sec' }
deadline: { $fromNow: '1 day' }
expires:
  $if: 'event.event == "push"'
  then: { $fromNow: '6 months' }
  else: { $fromNow: '7 days' }

extra:
  github:
    $if: 'event.event == "push"'
    then: { $eval: taskcluster.github_events.merge }
    else: { $eval: taskcluster.github_events.pull_request }

routes:
  $if: 'event.event == "push"'
  then:
    { $eval: build.routes }

payload:
  maxRunTime: { $eval: to_int(build.maxRunTime) }
  image: "ubuntu:16.04"

  env:
    $let:
      training: { $eval: as_slugid("test-training-linux-amd64-opt") }
      linux_rpi3_build: { $eval: as_slugid("linux-rpi3-cpu-opt") }
      linux_rpi3_ctc: { $eval: as_slugid("linux-rpi3-ctc-opt") }
    in:
      DEEPSPEECH_ARTIFACTS_ROOT: https://queue.taskcluster.net/v1/task/${linux_rpi3_build}/artifacts/public
      DEEPSPEECH_LIBCTC: https://queue.taskcluster.net/v1/task/${linux_rpi3_ctc}/artifacts/public/decoder.tar.xz
      DEEPSPEECH_TEST_MODEL: https://queue.taskcluster.net/v1/task/${training}/artifacts/public/output_graph.pb

  command:
    - "/bin/bash"
    - "--login"
    - "-cxe"
    - $let:
        extraSystemSetup: { $eval: strip(str(build.system_setup)) }
        extraSystemConfig: { $eval: strip(str(build.system_config)) }
        installGitlfs: { $eval: strip(str(build.git_lfs)) }
        multistrapRoot: /mnt/multistrap-raspbian-jessie
      in: >
        mount -l &&
        apt-get -qq update && apt-get -qq -y install binfmt-support git pixz wget qemu-user-static multistrap sudo file && ${extraSystemSetup} &&
        mount -l &&
        adduser --system --home ${system.homedir.linux} ${system.username} &&
        cd ${system.homedir.linux}/ &&
        echo -e "#!/bin/bash\nset -xe\n ${installGitlfs} env && id && mkdir ~/DeepSpeech/ && git clone --quiet ${event.head.repo.url} ~/DeepSpeech/ds/ && cd ~/DeepSpeech/ds && git checkout --quiet ${event.head.sha}" > /tmp/clone.sh && chmod +x /tmp/clone.sh &&
        sudo -H -u ${system.username} /bin/bash /tmp/clone.sh &&
        multistrap -d ${multistrapRoot}/ -f ${system.homedir.linux}/DeepSpeech/ds/native_client/multistrap_full.conf &&
        cp /usr/bin/qemu-arm-static ${multistrapRoot}/usr/bin &&
        for f in proc sys dev ; do ln -s /$f ${multistrapRoot}/$f ; done &&
        ln -s ${system.homedir.linux} ${multistrapRoot}/home &&
        chroot ${multistrapRoot} /usr/bin/qemu-arm-static /bin/bash --login -cxe "ls -hal /bin /usr/bin /sbin /usr/sbin" &&
        chroot ${multistrapRoot} /usr/bin/qemu-arm-static /bin/bash --login -cxe "adduser --system --home ${system.homedir.linux} ${system.username}" &&
        chroot ${multistrapRoot} /usr/bin/qemu-arm-static sudo -H -u ${system.username} --preserve-env /bin/bash ${build.args.tests_cmdline}

  artifacts:
    "public":
      type: "directory"
      path: "/tmp/artifacts/"
      expires:
        $if: 'event.event == "push"'
        then: { $fromNow: '6 months' }
        else: { $fromNow: '7 days' }

metadata:
  name: ${build.metadata.name}
  description: ${build.metadata.description}
  owner: ${event.head.user.email}
  source: ${event.head.repo.url}
