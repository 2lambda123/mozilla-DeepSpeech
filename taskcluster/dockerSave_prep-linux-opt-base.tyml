$if: 'event.event in build.allowed'
then:
  taskId: ${taskcluster.taskId}
  provisionerId: ${taskcluster.docker.provisionerId}
  workerType: ${taskcluster.docker.workerType}
  taskGroupId: ${taskcluster.taskGroupId}
  schedulerId: ${taskcluster.schedulerId}
  created: { $fromNow: '0 sec' }
  deadline: { $fromNow: '1 day' }
  expires: { $fromNow: '6 months' }
  dependencies:
    $map: { $eval: build.dependencies }
    each(b):
      $eval: as_slugid(b)
  routes:
    - "index.${system.docker_image.namespace_tar}"

  payload:
    maxRunTime: { $eval: to_int(build.maxRunTime) }
    image: "ubuntu:14.04"
    features:
      dockerSave: true

    env:
      TENSORFLOW_BUILD_ARTIFACT: "https://community-tc.services.mozilla.com/api/index/v1/task/project.deepspeech.tensorflow.pip.r1.15.ceb46aae5836a0f648a2c3da5942af2b7d1b98bf.cpu/artifacts/public/home.tar.xz"

    ## multistrap 2.2.0-ubuntu1 is broken in 14.04: https://bugs.launchpad.net/ubuntu/+source/multistrap/+bug/1313787
    command:
      - "/bin/bash"
      - "--login"
      - "-cxe"
      - $let:
          extraSystemSetup: { $eval: strip(str(build.system_setup)) }
          extraSystemConfig: { $eval: strip(str(build.system_config)) }
        in: >
          apt-get -qq -y remove --purge ubuntu-advantage-tools &&
          (apt-get -qq -y remove --purge ubuntu-advantage-tools || true) &&
          apt-get -qq update && apt-get -qq -y install curl git && ${extraSystemSetup};
          swig_bin=`curl -sSIL -o /dev/null -w "%{http_code}" ${system.docker_image.url}` &&
          if [ "$swig_bin" != "200" ]; then
            adduser --system --home ${system.homedir.linux} ${system.username} &&
            ${nodejs.packages_trusty.prep_12} && ${nodejs.packages_trusty.apt_pinning} &&
            apt-get -qq update && apt-get -qq -y install gdebi git pixz wget pkg-config libsox-dev nodejs python-yaml ${python.packages_trusty.apt} && ${extraSystemSetup} &&
            wget http://mirrors.kernel.org/ubuntu/pool/universe/m/multistrap/multistrap_2.2.0ubuntu2_all.deb -O /tmp/multistrap_2.2.0ubuntu2_all.deb &&
            echo "y" | gdebi /tmp/multistrap_2.2.0ubuntu2_all.deb &&
            cd ${system.homedir.linux}/ &&
            echo -e "#!/bin/bash\nset -xe\n env && id && (wget -O - $TENSORFLOW_BUILD_ARTIFACT | pixz -d | tar -C ${system.homedir.linux}/ -xf - ) && git clone --quiet ${event.head.repo.url} ~/DeepSpeech/ds/ && cd ~/DeepSpeech/ds && git checkout --quiet ${event.head.sha} && ln -s ~/DeepSpeech/ds/native_client/ ~/DeepSpeech/tf/native_client && mkdir -p ${system.homedir.linux}/.cache/node-gyp/ && wget -O - ${system.node_gyp_cache.url} | tar -C ${system.homedir.linux}/.cache/node-gyp/ -xzf - && mkdir -p ${system.homedir.linux}/ds-swig/bin/ && wget -O - ${system.swig.cache.linux_amd64} | tar -C ${system.homedir.linux}/ds-swig/ -xzf -" > /tmp/clone.sh && chmod +x /tmp/clone.sh &&
            sudo -H -u ${system.username} /bin/bash /tmp/clone.sh &&
            ${system.homedir.linux}/DeepSpeech/tf/tc-apt.sh &&
            multistrap -d /tmp/multistrap-raspbian-buster/ -f ${system.homedir.linux}/DeepSpeech/ds/native_client/multistrap_raspbian_buster.conf && ${extraSystemConfig}
          else
            mkdir -p /tmp/artifacts/ && curl -sSL -o /tmp/artifacts/dockerImage.tar ${system.docker_image.url}
          fi;

    artifacts:
      "public":
        type: "directory"
        path: "/tmp/artifacts/"
        expires: { $fromNow: '6 months' }

  metadata:
    name: ${build.metadata.name}
    description: ${build.metadata.description}
    owner: ${event.head.user.email}
    source: ${event.head.repo.url}
