$if: 'event.event in build.allowed'
then:
  taskId: ${taskcluster.taskId}
  provisionerId: ${taskcluster.docker.provisionerId}
  workerType: ${taskcluster.docker.workerType}
  taskGroupId: ${taskcluster.taskGroupId}
  schedulerId: ${taskcluster.schedulerId}
  dependencies:
    $map: { $eval: build.dependencies }
    each(b):
      $eval: as_slugid(b)

  created: { $fromNow: '0 sec' }
  deadline: { $fromNow: '1 day' }
  expires:
    $if: '(event.event == "push") || (event.event == "tag")'
    then: { $fromNow: '6 months' }
    else: { $fromNow: '7 days' }

  extra:
    nc_asset_name: { $eval: build.nc_asset_name }
    github:
      $if: '(event.event == "push") || (event.event == "tag")'
      then: { $eval: taskcluster.github_events.merge }
      else: { $eval: taskcluster.github_events.pull_request }

  routes:
    $if: '(event.event == "push") || (event.event == "tag")'
    then:
      { $eval: build.routes }

  payload:
    maxRunTime: { $eval: to_int(build.maxRunTime) }
    image:
      type: indexed-image
      namespace: ${system.docker_image.namespace}
      path: ${system.docker_image.name}


    command:
      - "/bin/bash"
      - "--login"
      - "-cxe"
      - sudo -H -u ${system.username} --preserve-env /bin/bash ${system.homedir.linux}/DeepSpeech/ds/${build.scripts.build} &&
        sudo -H -u ${system.username} /bin/bash ${system.homedir.linux}/DeepSpeech/ds/${build.scripts.package}

    artifacts:
      "public":
        type: "directory"
        path: "/tmp/artifacts/"
        expires:
          $if: '(event.event == "push") || (event.event == "tag")'
          then: { $fromNow: '6 months' }
          else: { $fromNow: '7 days' }

  metadata:
    name: ${build.metadata.name}
    description: ${build.metadata.description}
    owner: ${event.head.user.email}
    source: ${event.head.repo.url}
